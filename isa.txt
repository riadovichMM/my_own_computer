Команды:
DATA _    просто записывает данные в регистр данных
MOVE _ _  запись/перенос/клонирование/перезапись данных из одного регистра в другой
ADD _ _   сложение данных в двух регистрах и запись результата в первый
SUB _ _   вычитание регистра 2 из регистра один и запись результата в регистр один
JMP       безусловный переход исполнения программы на адрес который указан в регистре JR
JZ _      переход исполнения программы на адрес который находится в регистре JR в случае если регистр один равен 0
JNZ _     переход если не 0
JP _      переход если регистр позитивный
JN _      переход если регистр негативный
STORE _   записывает в регистр 1 данные из выбранной ячейки памяти
LOAD _    записывает данные из регистра один в выбранную ячейку памяти

NOT _     операция логическое НЕ
AND _ _   логическое И
OR _ _    логическое ИЛИ





Регистры:
D - регистр данных
JR - регистр перехода тут хранистя адрес памяти куда будет переход если будет вызван jmp/jz
MAR - регистр памяти данных
PAR - регистр памяти комманд
IR - регистр инструкций
R0 - регистр общего назначения
R1 - регистр общего назначения
R2 - регистр общего назначения





Пример кода сложение двух чисел и запись ее в ячейку памяти по адресу 1
data 2
move r0 d
data 3
move r1 d
add r0 r1
data 1
move mar d
store r0




пример кода перехода по метке:
data 0
move r0 d
data LABEL1
move jr d
jz r0
...some code
LABEL1:
...other code



пример кода цикла:
data 5
move r0 d
data 1
move r1 d
LOOP:
sub r0 r1
data LOOP
move jr d
jnz r0



Машинные инструкции для каждой команды
data   0000000000000000 ****************
move   0000************
add    0001************
sub    0010************
not    0011************
and    0100************
or     0101************


jmp    ****0000[****]**** // jump
jz     ****0001[****]**** // jump if zero
jnz    ****0010[****]**** // jump if not zero
jp     ****0011[****]**** // jump if positive
jn     ****0100[****]**** // jump if negative
load   ****1000[****]**** // load from memory
store  ****1001[****]**** // write to memory


структура машинного кода
[****](opcode) [****](jmp/load_store) [****](R0) [****](R1)


R0    0000
R1    0001
R2    0010

D     1000
JR    1001
MAR   1010
PAR   1011


Архитектура с общей шиной типа SAP (Simple as Possible) (But how do it know)